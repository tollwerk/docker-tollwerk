/* Grid margins */
@define-mixin grid-internal-prefix $gutter, $columns, $prefix {
    -ms-grid-columns: 1fr ($gutter 1fr)[ calc($columns - 1) ];
    grid-column-gap: $gutter;

    & > .xl, & > .xb, & > .$(prefix)xl[class], & > .$(prefix)xb[class] {
    margin-left: calc(0 - $gutter);
}

    & > .xr, & > .xb, & > .$(prefix)xr[class], & > .$(prefix)xb[class] {
    margin-right: calc(0 - $gutter);
}

    & > .$(prefix)xn[class] {
    margin-left: 0;
    margin-right: 0;
}

    @for $column from 1 to $columns {
        & > .$(prefix)c$(column) {
        -ms-grid-column-span: calc(($column - 1) * 2 + 1);
        grid-column-end: span $column;
    }

        /* Positioning */
        & > .$(prefix)p$(column)  {
        -ms-grid-column: calc(($column - 1) * 2 + 1);
        grid-column-start: col-start $column;
    }
    }
}

/* Grid margins */
@define-mixin grid-internal $gutter, $columns {
    display: -ms-grid;
    display: grid;
    -ms-grid-columns: 1fr ($gutter 1fr)[ calc($columns - 1) ];
    grid-template-columns: repeat($columns, [col-start] 1fr [col-end]);
    grid-column-gap: $gutter;

    & > .xl, & > .xb {
        margin-left: calc(0 - $gutter);
    }

    & > .xr, & > .xb {
        margin-right: calc(0 - $gutter);
    }

    @for $column from 2 to $columns {
        & > .c$(column) {
        -ms-grid-column-span: calc(($column - 1) * 2 + 1);
        grid-column-end: span $column;
    }

        /* Positioning */
        & > .p$(column)  {
        -ms-grid-column: calc(($column - 1) * 2 + 1);
        grid-column-start: col-start $column;
    }
    }
}

/* Grid */
@define-mixin grid $breakpoints, $gutters, $defaultGutter, $columns {
    .grid {
        @mixin-content;
        @add-mixin grid-internal $defaultGutter, $columns;

        /* Breakpoints */
        @each $breakpoint, $gutter in $breakpoints, $gutters {
            @media (--bp-$(breakpoint)--min) {
                @add-mixin grid-internal-prefix $gutter, $columns, $(breakpoint)-;
            }
        }
    }
}
